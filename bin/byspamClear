#!@PERLPATH@
#
# By SPAM Shared Memory Clear code.
# This package code follows BPL License
# JoungKyun Kim <http://oops.org>
#
# $Id: byspamClear,v 1.2 2009-12-02 07:34:50 oops Exp $
#
use lib '@includedir@';
use strict;

use Byspam::Init;

my $shm;
my @key;
my @name;
my @_sp;
my $size = 0;
my $i    = 0;

my $_shm;
my $_sem;
my @_shms;
my @_sems;

my $id;
my $cmd;

$shm = Byspam::Init->new ();

$_shm = `ipcs -m 2> /dev/null`;
$_sem = `ipcs -s 2> /dev/null`;
@_shms = split (/\r?\n/, $_shm);
@_sems = split (/\r?\n/, $_sem);

push (@key, $shm->{_confkey});
push (@name, 'Configuration');

foreach my $_line ( @{$shm->opts('basics')} ) {
	@_sp = split (/:/, $_line);
	push (@key, hex $_sp[2]);
	push (@name, $_sp[0]);
}

@_sp = split (/:/, $shm->opts ('allows'));
push (@key, hex $_sp[1]);
push (@name, 'Allow');

@_sp = split (/:/, $shm->opts ('ignore'));
push (@key, hex $_sp[1]);
push (@name, 'Ignore');

$size = @key;

print "----  Clear Byspam Shared Memory  ---------------------------------------------\n\n";
for ( $i=0; $i<$size; $i++ ) {
	$id = getid ($key[$i], @_shms);
	$id = 0 if ( ! $id );
	printf "  %-13s key 0x%8x shmid %4d cleared ... ", $name[$i], $key[$i], int $id;

	if ( $id ) {
		$cmd = `ipcrm shm $id &> /dev/null`;
		if ( ! $? ) {
			print "OK\n";
			next;
		}
		print "Failed\n";
	} else {
		print "Skip\n";
	}
}

print "\n\n";
print "----  Clear Byspam Semaphore      ---------------------------------------------\n\n";
for ( $i=0; $i<$size; $i++ ) {
    $id = getid ($key[$i], @_sems);
	$id = 0 if ( ! $id );
	printf "  %-13s key 0x%8x semid %4d cleared ... ", $name[$i], $key[$i], int $id;

	if ( $id ) {
		$cmd = `ipcrm sem $id &> /dev/null`;
		if ( ! $? ) {
			print "OK\n";
			next;
		}
		print "Failed\n";
	} else {
		print "Skip\n";
	}
}

print "\n\n";


sub getid {
	my ( $_k, @_s ) = @_;
	my @_me;
	my $_sk;
	$_sk = sprintf "0x%x", "$_k";

	foreach ( @_s ) {
		if ( m/^$_sk/ ) {
			@_me = split (/[\s]+/, $_);
			return $_me[1] if ( $_me[1] );
		}
	}

	return "";
}

#
# Local variables:
# tab-width: 4
# c-basic-offset: 4
# End:
# vim600: noet sw=4 ts=4 fdm=marker
# vim<600: noet sw=4 ts=4
#
