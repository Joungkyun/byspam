#!/bin/sh
# $Id: upgrade,v 1.12 2004-11-30 19:24:38 oops Exp $

# include byspam version
. VERSION

printDot() {
  if [ -z "${1}" ];then
    chk=3
  else
    chk=${1}
  fi

  i=1
  while [ "${i}" -le "${chk}" ]
  do
    no="$no ${i}"
    i=$((${i}+1))
  done

  for i in ${no}
  do
    echo -n "."
    sleep 1
  done

  no=
  chk=
}

printError() {
  l=$(echo ${LANG} | sed -n '/ko\|KO/p')

  echo "  Check Failed"
  echo
  if [ -n "${l}" ]; then
    echo "  이전 버젼의 경로를 확인할 수 없습니다. By SAPM 에서 제공하는"
    echo "  byspamUninstall 를 이용하여 이전 버젼을 삭제하시고 새로 설치하십시"
    echo "  오. filter-* 는 계속 사용을 할 수 있으니, 백업을 하시고"
    echo "  새 버젼을 설치한 후 filterdir 에 덮어 씌우시면 됩니다."
    echo
  else
    echo "  Can't find path of previous version by unknown error. First,"
    echo "  byspaUninstall previous By SPAM program with uninstall program that"
    echo "   supported By SAPM in \$bindir, and install new version."
    echo "  Don't Forget to backup filter-*. After install new version,"
    echo "  copy backuped filter-*.conf to \$filterdir"
    echo
  fi

  exit 1
}

clear
echo "####################################################################"
echo "By SAPM ${BYVERSION} UPGRADE UTILITY"
echo "####################################################################"
echo

while [ true ]
do
  echo -n "  Enter path of dir include byspam.conf : "
  read etcPath 

  if [ -d "${etcPath}" ]; then
    if [ -f "${etcPath}/install.log" ]; then
      upinfo="${etcPath}/install.log"
      break
    else
      # if previous version is 0.1.1
      if [ -f "${etcPath}/filter.rc" ]; then
        chk=$(cat ${etcPath}/filter.rc | grep "^FilterValue=" | sed -e 's/FilterValue=\|\/byspamFilter\|`//g')
      fi

      if [ -f "${chk}/byspamUninstall" ]; then
        upinfo="${chk}/byspamUninstall"
        upinfochk=1
        break
      elif [ -f "${chk}/uninstall" ]; then
        upinfo="${chk}/uninstall"
        upinfochk=1
        break
      fi
    fi
  fi
done

while [ true ]
do
  echo -n "  Enter path of perl : "
  read perlPath

  [ -f "${perlPath}" ] && break
done
echo



# create installation directory
mkdir -p ./installdir

# get installed path
if [ -n "${upinfochk}" ]; then
  CONF=$(cat ${upinfo} | sed -n -e '/^[a-zA-z]\+="[^"]\+"/p')
else
  CONF=$(cat ${upinfo} | sed -n -e '/^[a-zA-z]\+=/p')
fi
[ -n "${CONF}" ] && eval $CONF

# version check
if [ -f "${bindir}/byspamUninstall" ]; then
  lversion=$(cat ${bindir}/byspamUninstall | sed -n '/^VERSION/p' | sed -e 's/VERSION=//g')
elif [  -f "${bindir}/uninstall" ]; then
  lversion=$(cat ${bindir}/uninstall | sed -n '/^VERSION/p' | sed -e 's/VERSION=//g')
else
  echo "  Error: install log of previous version includes wrong install path"
  exit 1
fi

[ "${lversion}" = "" ] && {
  if [ -f "${confdir}/byspam.conf" ]; then
    lversion=$(cat ${confdir}/byspam.conf | sed -n '/^$version/p' | \
               sed -e "s/\$version[ ]*=[ ]*\"\([0-9.]\+\)\"/\1/g")
  else
    echo "  Error: install log of previous version includes wrong install path"
    exit 1
  fi
}

[ "${lversion}" = "" ] && lversion="Unknown"

echo "Check of Installed directory on previous version"
echo
echo -n "  Previous version check      "
printDot
echo " ${lversion}"

echo -n "  Bin directory               "
printDot

if [ -z "${bindir}" ]; then
  printError
else
  echo " ${bindir}"
fi

echo -n "  Config directory            "
printDot

if [ -z "${confdir}" ]; then
  printError
else
  echo " ${confdir}"
fi

echo -n "  Filter directory            "
printDot

if [ -z "${filterdir}" ]; then
  printError
else
  echo " ${filterdir}"
fi

echo -n "  Include directory           "
printDot

if [ -z "${includedir}" ]; then
  printError
else
  echo " ${includedir}"
fi

echo -n "  Path of procmailrc          "
printDot

if [ -z "${procpath}" ]; then
  printError
else
  echo " ${procpath}"
fi

echo -n "  Path of perl                "
printDot
echo " ${perlPath}"

echo
echo "Now start update By SPAM to ${BYVERSION} from ${lversion}"
echo -n "  please wait for prepared update"
printDot 5
echo

CHK=0

./configure --bindir=${bindir} \
            --confdir=${confdir} \
            --filterdir=${filterdir} \
            --includedir=${includedir} \
            --procpath=${procpath} \
            --perlpath=${perlPath} \
            --package=1


echo
echo
echo "Now removed needless old file"
[ -f ${bindir}/byspamTrashFile ] && rm -f ${bindir}/byspamTrashFile
[ -f ${bindir}/plain.pl ] && rm -f ${bindir}/plain.pl
[ -f ${bindir}/regexChk.pl ] && rm -f ${bindir}/regexChk.pl
[ -f ${includedir}/byspamFunction.pl ] && rm -f ${includedir}/byspamFunction.pl
echo "  removed byspamTrashFile : OK"

echo
echo
echo "Now update ${BYVERSION} file"
echo
for i in byspamFilter byspamTrash byspamPlain byspamRegexChk
do
  install -m755 ./installdir/${i} ${bindir} > /dev/null 2>&1
  CHK=$?

  if [ "${CHK}" = 0 ]; then
    echo "#=${bindir}/${i}" >> ./installdir/install.log
    printf "  update %23s : OK\n" "${i}"
  else
    printf "  update %23s : Failed\n" "${i}"
    rm -rf ./installdir ./install
    exit 1
  fi
done


install -m644 ./installdir/byspam.conf ${confdir} > /dev/null 2>&1
CHK=$?
if [ "${CHK}" = 0 ]; then
  echo "#=${confdir}/byspam.conf" >> ./installdir/install.log
  printf "  update %23s : OK\n" "byspam.conf"
else
  printf "  update %23s : Failed\n" "byspam.conf"
  rm -rf ./installdir ./install
  exit 1
fi

install -m644 ./installdir/filter.rc ${confdir} > /dev/null 2>&1
CHK=$?
if [ "${CHK}" = 0 ]; then
  echo "#=${confdir}/filter.rc" >> ./installdir/install.log
  printf "  update %23s : OK\n" "filter.rc"
else
  printf "  update %23s : Failed\n" "filter.rc"
  rm -rf ./installdir ./install
  exit 1
fi

mkdir -p ${includedir}/Byspam
for i in Common.pm Encode.pm Getopt.pm Mail.pm Parse.pm Trash.pm
do
  install -m644 ./include/${i} ${includedir}/Byspam/${i} > /dev/null 2>&1
  CHK=$?
  if [ "${CHK}" = 0 ]; then
    echo "#=${includedir}/Byspam/${i}" >> ./installdir/install.log
    printf "  update %23s : OK\n" "${i}"
  else
    printf "  update %23s : Failed\n" "${i}"
    rm -rf ./installdir ./install
    exit 1
  fi
done

install -m755 ./installdir/byspamUninstall ${bindir} > /dev/null 2>&1
CHK=$?
if [ "${CHK}" = 0 ]; then
  printf "  update %23s : OK\n" "byspamUninstall"
else
  printf "  update %23s : Failed\n" "byspamUninstall"
  rm -rf ./installdir ./install
  exit 1
fi

if [ ! -f "${filterdir}/filter-ignore" ]; then
  install -m644 filter/filter-ignore ${filterdir} > /dev/null 2>&1
  CHK=$?

  if [ "${CHK}" = 0 ]; then
    echo "  add new filter (filter-ignore) : OK"
  else
    echo "  add new filter (filter-ignore) : Failed"
    rm -rf ./installdir ./install
    exit 1
  fi
fi

install -m644 ./installdir/install.log ${confdir} > /dev/null 2>&1
CHK=$?
if [ "${CHK}" = 0 ]; then
  printf "  update %23s : OK\n" "install log"
else
  printf "  update %23s : Failed\n" "install log"
  rm -rf ./installdir ./install
  exit 1
fi

if [ "${datadir}" != "" ]; then
  rm -rf ${datadir}
  CHK=$?

  if [ "${CHK}" = 0 ]; then
    echo "  removed data dir : OK"
  fi
fi


echo
echo
echo "Completed upgrade. Now you reconfig $confdir/byspam.conf !!"
rm -rf ./installdir

exit 0
